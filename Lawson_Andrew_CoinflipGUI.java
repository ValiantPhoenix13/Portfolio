/*******************************************************************************
 * Lawson_Andrew
 * The following code implements the method flip from the coin class
 * then works to construct a histogram on a GUI based on the results
 *//////////////////////////////////////////////////////////////////////////////
package Coinflip;

/**
 *
 * @author axelk
 */
public class Lawson_Andrew_CoinflipGUI extends javax.swing.JFrame {

    /**
     * Creates new form Lawson_Andrew_CoinflipGUI
     */
    public Lawson_Andrew_CoinflipGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblnumFlips = new javax.swing.JLabel();
        txtnumFlips = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        lblHistogram = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistogram = new javax.swing.JTextArea();
        btnFlip = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Coinflips"));

        lblnumFlips.setText("The number of times you wish the coin to be flipped: ");

        txtnumFlips.setText("Please input a number between 0 and 1000");
        txtnumFlips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnumFlipsActionPerformed(evt);
            }
        });

        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblHistogram.setText("The resulting histogram:");

        txtHistogram.setColumns(20);
        txtHistogram.setRows(5);
        jScrollPane1.setViewportView(txtHistogram);

        btnFlip.setText("FLIP");
        btnFlip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblnumFlips)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                    .addComponent(txtnumFlips)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnFlip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblnumFlips))
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnumFlips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHistogram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFlip)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnExit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ////////////////////////////////////////////////////////////////////////////
    //What happens when the EXIT button is pressed
    ////////////////////////////////////////////////////////////////////////////
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtnumFlipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnumFlipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnumFlipsActionPerformed

    ////////////////////////////////////////////////////////////////////////////
    //What happens when the CLEAR button is pressed
    ////////////////////////////////////////////////////////////////////////////
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtnumFlips.setText("Please input a number between 0 and 1000");
        txtHistogram.setText(" ");
    }//GEN-LAST:event_btnClearActionPerformed

    ////////////////////////////////////////////////////////////////////////////
    //What happens when the FLIP button is pressed
    ////////////////////////////////////////////////////////////////////////////
    private void btnFlipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlipActionPerformed
        try {
            int F = Integer.parseInt(txtnumFlips.getText());
            if (F<=0 || F>= 1000){
         txtnumFlips.setText("A number between 0 and 1000 needs to be entered");
            }
            if (F > 0 && F < 1000){
                int max = F * 2;
                int flip[] = new int[max];
                Coin c = new Coin();
                for (int i = 0; i < max; i++){
                    flip[i] = 0;
                }
                int h = 0;
                int a = F;
                do {                    
                    int r = c.Flip();
                    if (r == 0){
                        flip[F] = flip[F] + 1;
                        F = F + 1;
                    }
                    if (r == 1){
                        flip[F] = flip[F] + 1;
                        F = F - 1;
                    }
                    h++;
                } while (h < a);
                int f = 0;
                for (int t = 0; t < max; t++){
                    if (flip[f] !=0){
                        txtHistogram.append("|");
                        for (int y = 0; y < flip[f]; y++){
                            txtHistogram.append("*");
                        }
                        txtHistogram.append("\n");
                    }
                    f++;
                }
            }
        } catch (NumberFormatException e) {
         txtnumFlips.setText("A number between 0 and 1000 needs to be entered");
        }
    }//GEN-LAST:event_btnFlipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lawson_Andrew_CoinflipGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lawson_Andrew_CoinflipGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lawson_Andrew_CoinflipGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lawson_Andrew_CoinflipGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lawson_Andrew_CoinflipGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFlip;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHistogram;
    private javax.swing.JLabel lblnumFlips;
    private javax.swing.JTextArea txtHistogram;
    private javax.swing.JTextField txtnumFlips;
    // End of variables declaration//GEN-END:variables
}
